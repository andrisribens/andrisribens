'use client';

import type { Metadata } from 'next';
import localFont from 'next/font/local';
import '../styles/globals.scss';
import Header from '../components/header/Header';
import Footer from '../components/footer/Footer';
import store from '@/store/store';
import { Provider } from 'react-redux';
import { useSelector } from 'react-redux';
import { RootState } from '@/store/store';

// const geistSans = localFont({
//   src: '../../../../public/fonts/GeistVF.woff',
//   variable: '--font-geist-sans',
//   weight: '100 900',
// });
// const geistMono = localFont({
//   src: '../../../../public/fonts/GeistMonoVF.woff',
//   variable: '--font-geist-mono',
//   weight: '100 900',
// });

// Metadata
// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

// Wrapper component to handle isDarkMode logic
const BodyWrapper = ({ children }: { children: React.ReactNode }) => {
  const isDarkMode = useSelector(
    (state: RootState) => state.darkMode.isDarkMode
  );

  console.log('isDarkMode', isDarkMode);

  return (
    <html lang="en" className={isDarkMode ? 'darkMode' : 'lightMode'}>
      <body>
        <Header />
        <main>{children}</main>
        <Footer />
      </body>
    </html>
  );
};

// RootLayout
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <Provider store={store}>
      <BodyWrapper>{children}</BodyWrapper>
    </Provider>
  );
}
